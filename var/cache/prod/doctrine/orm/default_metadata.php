<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__BlogPost__CLASSMETADATA__' => 0,
'App__Entity__User__CLASSMETADATA__' => 1,
'App__Entity__Comment__CLASSMETADATA__' => 2,
'App__Entity__UserProfile__CLASSMETADATA__' => 3,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\BlogPost',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\BlogPost',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\BlogPostRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'BlogTitle' => [
                            'fieldName' => 'BlogTitle',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'blog_title',
                        ],
                        'BlogText' => [
                            'fieldName' => 'BlogText',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 5025,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'blog_text',
                        ],
                        'createdate' => [
                            'fieldName' => 'createdate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'createdate',
                        ],
                        'extraPrivacy' => [
                            'fieldName' => 'extraPrivacy',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'extra_privacy',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'blog_title' => 'BlogTitle',
                        'blog_text' => 'BlogText',
                        'createdate' => 'createdate',
                        'extra_privacy' => 'extraPrivacy',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'BlogTitle' => 'blog_title',
                        'BlogText' => 'blog_text',
                        'createdate' => 'createdate',
                        'extraPrivacy' => 'extra_privacy',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'blog_post',
                    ],
                ],
                'associationMappings' => [
                    [
                        'comments' => [
                            'fieldName' => 'comments',
                            'mappedBy' => 'blog',
                            'targetEntity' => 'App\\Entity\\Comment',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\BlogPost',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'likedBy' => [
                            'fieldName' => 'likedBy',
                            'joinTable' => [
                                'name' => 'blog_post_user',
                                'joinColumns' => [
                                    [
                                        'name' => 'blog_post_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'user_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\User',
                            'mappedBy' => null,
                            'inversedBy' => 'Liked',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\BlogPost',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'blog_post_id',
                                'user_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'blog_post_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                        ],
                        'author' => [
                            'fieldName' => 'author',
                            'joinColumns' => [
                                [
                                    'name' => 'author_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => 'Blog',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\BlogPost',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'author_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'author_id' => 'author_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'author_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'username' => [
                            'fieldName' => 'username',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'username',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'confirmationToken' => [
                            'fieldName' => 'confirmationToken',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'confirmation_token',
                        ],
                        'confirmed' => [
                            'fieldName' => 'confirmed',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'confirmed',
                        ],
                        'bannedUntill' => [
                            'fieldName' => 'bannedUntill',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'banned_untill',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'username' => 'username',
                        'roles' => 'roles',
                        'password' => 'password',
                        'confirmation_token' => 'confirmationToken',
                        'confirmed' => 'confirmed',
                        'banned_untill' => 'bannedUntill',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'username' => 'username',
                        'roles' => 'roles',
                        'password' => 'password',
                        'confirmationToken' => 'confirmation_token',
                        'confirmed' => 'confirmed',
                        'bannedUntill' => 'banned_untill',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'userProfile' => [
                            'fieldName' => 'userProfile',
                            'targetEntity' => 'App\\Entity\\UserProfile',
                            'joinColumns' => [],
                            'mappedBy' => 'user',
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'Liked' => [
                            'fieldName' => 'Liked',
                            'joinTable' => [],
                            'targetEntity' => 'App\\Entity\\BlogPost',
                            'mappedBy' => 'LikedBy',
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'Blog' => [
                            'fieldName' => 'Blog',
                            'mappedBy' => 'author',
                            'targetEntity' => 'App\\Entity\\BlogPost',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'comments' => [
                            'fieldName' => 'comments',
                            'mappedBy' => 'author',
                            'targetEntity' => 'App\\Entity\\Comment',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'follow' => [
                            'fieldName' => 'follow',
                            'joinTable' => [
                                'name' => 'user_user',
                                'joinColumns' => [
                                    [
                                        'name' => 'user_source',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'user_target',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\User',
                            'mappedBy' => null,
                            'inversedBy' => 'followers',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'user_source',
                                'user_target',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'user_source' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'user_target' => 'id',
                            ],
                        ],
                        'followers' => [
                            'fieldName' => 'followers',
                            'joinTable' => [],
                            'targetEntity' => 'App\\Entity\\User',
                            'mappedBy' => 'follow',
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Comment',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Comment',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommentRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'text' => [
                            'fieldName' => 'text',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 500,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'text',
                        ],
                        'createdate' => [
                            'fieldName' => 'createdate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'createdate',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'text' => 'text',
                        'createdate' => 'createdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'text' => 'text',
                        'createdate' => 'createdate',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'comment',
                    ],
                ],
                'associationMappings' => [
                    [
                        'blog' => [
                            'fieldName' => 'blog',
                            'joinColumns' => [
                                [
                                    'name' => 'blog_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'comments',
                            'targetEntity' => 'App\\Entity\\BlogPost',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Comment',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'blog_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'blog_id' => 'blog_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'blog_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'author' => [
                            'fieldName' => 'author',
                            'joinColumns' => [
                                [
                                    'name' => 'author_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'comments',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Comment',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'author_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'author_id' => 'author_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'author_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\UserProfile',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\UserProfile',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserProfileRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                        'Bio' => [
                            'fieldName' => 'Bio',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 1024,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'bio',
                        ],
                        'websiteUrl' => [
                            'fieldName' => 'websiteUrl',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'website_url',
                        ],
                        'twitterUsername' => [
                            'fieldName' => 'twitterUsername',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'twitter_username',
                        ],
                        'company' => [
                            'fieldName' => 'company',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'company',
                        ],
                        'location' => [
                            'fieldName' => 'location',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'location',
                        ],
                        'dateOfBirth' => [
                            'fieldName' => 'dateOfBirth',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'date_of_birth',
                        ],
                        'Image' => [
                            'fieldName' => 'Image',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'image',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'bio' => 'Bio',
                        'website_url' => 'websiteUrl',
                        'twitter_username' => 'twitterUsername',
                        'company' => 'company',
                        'location' => 'location',
                        'date_of_birth' => 'dateOfBirth',
                        'image' => 'Image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'Bio' => 'bio',
                        'websiteUrl' => 'website_url',
                        'twitterUsername' => 'twitter_username',
                        'company' => 'company',
                        'location' => 'location',
                        'dateOfBirth' => 'date_of_birth',
                        'Image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user_profile',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'App\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => 'userProfile',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\UserProfile',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
